@using Newtonsoft.Json
@using System.Linq
@inherits LayoutComponentBase
@inject HttpClient Http

@if (_resume == null)
{
    <h1>Loading...</h1>
}
else
{
    <div class="page">
        <div class="sidebar">
            <NavMenu Resume="@_resume"/>
        </div>

        <main>
            <div class="top-row px-4">
                <div class="import">
                    <a href="data/wheeler-resume.json" download>Download Template</a>
                    <label class="btn-link">
                        <InputFile OnChange="@UpdateResume" class="d-none"/>
                        Import Your Resume
                    </label>
                </div>
                <a href="https://github.com/wheeleruniverse/cgc-resume-from-json" target="_blank">GitHub</a>
            </div>

            <article class="content px-4">
                <CascadingValue Value="@_resume">
                    @Body
                </CascadingValue>
            </article>

            <div class="bottom-row px-4">
                @if (_resume.Urls != null)
                {
                    <SocialFooter Urls="@_resume.GetKnownUrls()"/>
                }
            </div>
        </main>
    </div>
}

@code {
    private Resume? _resume;

    protected override async Task OnInitializedAsync()
    {
        _resume = await Http.GetFromJsonAsync<Resume>("data/wheeler-resume.json");
    }

    private async void UpdateResume(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);

        var content = System.Text.Encoding.UTF8.GetString(buffer);
        _resume = JsonConvert.DeserializeObject<MainLayout.Resume>(content);

        StateHasChanged();
    }

    public class Resume
    {
        private static readonly string[] KnownList =
        {
            "facebook",
            "github",
            "instagram",
            "linkedin",
            "mastodon",
            "stack-overflow",
            "substack",
            "tiktok",
            "twitch",
            "twitter",
            "x",
            "youtube"
        };

        public string? About { get; set; }

        public ResumeCertification[]? Certifications { get; set; }

        public ResumeExperience[]? Experience { get; set; }

        public ResumeGroup[]? Groups { get; set; }

        public string? Location { get; set; }

        public string Name { get; set; } = "Unknown";

        public ResumeSkillGroup[]? SkillGroups { get; set; }

        public ResumeUrl[]? Urls { get; set; }

        public ResumeUrl[] GetKnownUrls()
        {
            return Urls?.Where(i => KnownList.Contains(i.Name)).ToArray() ?? Array.Empty<ResumeUrl>();
        }

        public ResumeUrl[] GetUnknownUrls()
        {
            return Urls?.Where(i => !KnownList.Contains(i.Name)).ToArray() ?? Array.Empty<ResumeUrl>();
        }
    }

    public class ResumeCertification
    {
        public string? Expiry { get; set; }

        public string Id { get; set; } = "Unknown";

        public string Issue { get; set; } = "Unknown";

        public string Level { get; set; } = "Unknown";

        public string Link { get; set; } = "https://example.com/";

        public string Name { get; set; } = "Unknown";

        public string Vendor { get; set; } = "Unknown";
    }

    public class ResumeExperience
    {
        public string Employer { get; set; } = "Unknown";

        public string Description { get; set; } = "Unknown";

        public string Link { get; set; } = "https://example.com/";

        public string Start { get; set; } = "Unknown";

        public string Title { get; set; } = "Unknown";

        public string? Until { get; set; }
    }

    public class ResumeGroup
    {
        public string Description { get; set; } = "Unknown";

        public string Name { get; set; } = "Unknown";

        public string Link { get; set; } = "https://example.com/";
    }

    public class ResumeSkillGroup
    {
        public string? Name { get; set; }

        public string[] Skills { get; set; } = Array.Empty<string>();
    }

    public class ResumeUrl
    {
        public string Name { get; set; } = "Unknown";

        public string Link { get; set; } = "https://example.com/";
    }

}